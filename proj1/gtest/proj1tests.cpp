#include <vector>
#include <gtest/gtest.h>
#include "proj1.hpp"

namespace{

	TEST(SampleTests, TestCostOfJourney)
	{
		std::vector< std::vector< long > > distances = 
		{
				{0, 2, 9, 1000}, 
				{1, 0, 6, 4}, 
				{1000, 7, 0, 8}, 
				{6, 3, 1000, 0}
		};
		std::vector<unsigned> journey = {0, 2, 3, 1};
		EXPECT_TRUE( costOfJourney(distances, journey) == 21);
	}

	TEST(SampleTests, TestFindJourney)
	{
		std::vector< std::vector< long > > distances = 
		{
				{0, 2, 9, 0}, 
				{1, 0, 6, 4}, 
				{0, 7, 0, 8}, 
				{6, 3, 0, 0}
		};
		std::vector<unsigned> expected = {0, 2, 3, 1}; // remember, we expect the journey to start at 0 in project 1.
		std::vector<unsigned> journey = tsp_dynamic_program(distances, 4);
		EXPECT_TRUE( journey == expected  || costOfJourney(distances, journey) == 21);

	}

// SUGGESTION:  COMMENT THIS OUT UNTIL THE FIRST TWO CASES WORK.

/*
	TEST(SampleTests, LargerTest)
	{
		std::vector< std::vector< long > > distances = 
		{
			{0, 0, 0, -1, 54, 0, 51, 102, 80, 52, 0, 68, 51, 44, 100,12, 45, 67, 12,31, 32, 32},
            {0, 0, 56, 102, 63, 70, 0, 0, 0, 93, -6, 48, 0, 0, 0, 67,43,12,393,199,67,89,12},
            {84, -9, 0, 83, 0, 73, 20, 38, 0, -8, 105, 0, 43, 73, 2,9898,31,3,1,4,89,12,33},
            {0, 0, 36, 0, 54, 24, 0, 59, 0, 83, 40, 75, 15, 74, 0,6,3,1,4244,46,78,23,12},
            {14, 30, 87, 96, 0, 48, 84, 0, 0, 14, 0, 75, 0, 49, 0,77,3,323,452,64,771,12,32},
            {0, 103, 62, 0, 88, 0, 84, 11, 79, 27, 2, 102, 61, 16, 1,899,31,34,13,34,7238,12,32},
            {0, 0, 33, 0, 79, 86, 0, 26, 1, 2, 12, 74, 0, 84, 50,771,182,8123,991,1,7823,34,2},
            {0, 1, 0, 68, 86, 19, 0, 0, 100, 12, 95, 25, 55, -2, 97,1,1,1,23,4, 12, 23, 44},
            {100, 76, 0, 59, 0, 69, 47, 72, 0, 76, 19, 47, 91, 94, 11,5,6,7,2,5, 23, 23, 44},
            {21, 48, 0, 30, 74, 2, -1, 0, 104, 0, 33, 22, 38, 68, 95,26,23,56,1,2,1,1,1},
            {0, 79, 15, 0, 28, 100, 91, 103, 0, 9, 0, 76, 41, 0, 102,88,12,34,232,33,2,3444,1},
            {39, 83, 0, 49, 0, 101, 40, 0, 0, 55, 82, 0, 0, 0, 0,122,32,23,55,22,1,2,3},
            {101, 71, -2, 26, 109, 0, 82, 33, 7, 0, -1, -5, 0, 19, 11,127,4324,11,23,1,2,3},
            {62, 98, 27, 39, 78, 0, 106, 0, 64, 24, 0, 58, 29, 0, 49,12,23,1123,343,12,23,1,3},
            {10, 18, 26, 62, 6, 90, 75, 0, 0, 24, 46, 0, -7, 41, 0,812,2343,232,35,23,1,1,1},
            {0, 79, 15, 0, 28, 100, 91, 103, 0, 9, 0, 76, 41, 0, 0,12,34,232,33,1,1,1},
            {39, 83, 0, 49, 0, 101, 40, 0, 0, 55, 82, 0, 0, 0, 0,122,0,23,55,22,1,1,3},
            {101, 71, -2, 26, 109, 0, 82, 33, 7, 0, -1, -5, 0, 19, 11,127,0,11,23,12,3,1},
            {62, 98, 27, 39, 78, 0, 106, 0, 64, 24, 0, 58, 29, 0, 12,23,1123,0,12,1,2,3},
            {10, 18, 26, 62, 6, 90, 75, 0, 0, 24, 46, 0, -7, 41, 0,812,2343,232,35,0,12,32,4},
            {0, 0, 56, 102, 63, 70, 0, 0, 0, 93, -6, 48, 0, 0, 0, 67,43,12,393,199,0,89,12},
            {84, -9, 0, 83, 0, 73, 20, 38, 0, -8, 105, 0, 43, 73, 2,9898,31,3,1,4,89,0,33},
            {0, 0, 36, 0, 54, 24, 0, 59, 0, 83, 40, 75, 15, 74, 0,6,3,1,4244,46,78,23,0}
		};
		std::vector<unsigned> expected = {0, 3, 5, 7, 13, 2, 1, 10, 4, 9, 6, 8, 14, 12, 11};
		std::vector<unsigned> journey = tsp_dynamic_program(distances, 23);
		EXPECT_TRUE( journey == expected || costOfJourney(distances, journey) == 124);
	}
*/
/*
TEST(SampleTests, LargerTest)
	{
		std::vector< std::vector< long > > distances = 
		{
			{0, 0, 0, -1, 54, 0, 51, 102, 80, 52, 0, 68, 51, 44, 100},
			{0, 0, 56, 102, 63, 70, 0, 0, 0, 93, -6, 48, 0, 0, 0},
			{84, -9, 0, 83, 0, 73, 20, 38, 0, -8, 105, 0, 43, 73, 2},
			{0, 0, 36, 0, 54, 24, 0, 59, 0, 83, 40, 75, 15, 74, 0},
			{14, 30, 87, 96, 0, 48, 84, 0, 0, 14, 0, 75, 0, 49, 0},
			{0, 103, 62, 0, 88, 0, 84, 11, 79, 27, 2, 102, 61, 16, 1},
			{0, 0, 33, 0, 79, 86, 0, 26, 1, 2, 12, 74, 0, 84, 50},
			{0, 1, 0, 68, 86, 19, 0, 0, 100, 12, 95, 25, 55, -2, 97},
			{100, 76, 0, 59, 0, 69, 47, 72, 0, 76, 19, 47, 91, 94, 11},
			{21, 48, 0, 30, 74, 2, -1, 0, 104, 0, 33, 22, 38, 68, 95},
			{0, 79, 15, 0, 28, 100, 91, 103, 0, 9, 0, 76, 41, 0, 102},
			{39, 83, 0, 49, 0, 101, 40, 0, 0, 55, 82, 0, 0, 0, 0},
			{101, 71, -2, 26, 109, 0, 82, 33, 7, 0, -1, -5, 0, 19, 11},
			{62, 98, 27, 39, 78, 0, 106, 0, 64, 24, 0, 58, 29, 0, 49},
			{10, 18, 26, 62, 6, 90, 75, 0, 0, 24, 46, 0, -7, 41, 0}
		};
		std::vector<unsigned> expected = {0, 3, 5, 7, 13, 2, 1, 10, 4, 9, 6, 8, 14, 12, 11};
		std::vector<unsigned> journey = tsp_dynamic_program(distances, 15);
		EXPECT_TRUE( journey == expected || costOfJourney(distances, journey) == 124);
	}

	TEST(PiazzaTests, Piazza1)

{

std::vector< std::vector< long > > distances = 

{

{0, 197, 95, 112, 63, 5, 152, 158, 26, 153, 97, 198, 110, 35, 110, 150, 141, 42, 59},

{46, 0, 1, 74, 22, 119, 127, 114, 0, 64, 3, 30, 163, 0, 85, 71, 49, 135, 154},

{200, 0, 0, 21, 60, 89, 85, 175, 59, 1, 1, 162, 152, 196, 176, 115, 31, 125, 143},

{124, 116, 132, 0, 27, 100, 35, 173, 120, 112, 61, 51, 0, 118, 166, 85, 12, 50, 49},

{97, 192, 53, 140, 0, 0, 126, 85, 46, 96, 85, 165, 148, 82, 198, 75, 111, 59, 30},

{116, 104, 9, 147, 18, 0, 190, 143, 143, 71, 94, 67, 166, 54, 132, 91, 76, 0, 180},

{131, 27, 178, 117, 113, 185, 0, 165, 17, 45, 33, 64, 21, 103, 155, 7, 141, 94, 16},

{89, 66, 0, 50, 190, 92, 25, 0, 41, 166, 86, 107, 199, 128, 10, 130, 183, 17, 170},

{92, 92, 151, 90, 36, 40, 87, 149, 0, 0, 148, 126, 24, 0, 200, 18, 94, 136, 158},

{171, 113, 35, 94, 53, 199, 124, 148, 0, 0, 0, 161, 196, 147, 127, 151, 0, 109, 100},

{104, 3, 5, 103, 28, 60, 155, 50, 157, 33, 0, 68, 146, 99, 141, 150, 127, 102, 55},

{158, 194, 165, 113, 49, 0, 5, 140, 150, 17, 187, 0, 101, 0, 92, 128, 105, 3, 91},

{103, 200, 126, 80, 4, 173, 111, 195, 198, 123, 196, 70, 0, 0, 126, 113, 99, 193, 59},

{182, 39, 61, 187, 63, 81, 148, 8, 148, 63, 83, 0, 195, 0, 127, 23, 64, 165, 19},

{133, 117, 185, 3, 166, 28, 102, 173, 83, 152, 141, 35, 165, 144, 0, 75, 60, 84, 130},

{195, 89, 87, 70, 68, 63, 105, 132, 148, 160, 168, 193, 168, 2, 181, 0, 71, 15, 190},

{27, 194, 4, 196, 126, 56, 45, 136, 69, 158, 181, 40, 194, 191, 173, 13, 0, 190, 44},

{166, 52, 118, 115, 74, 78, 178, 130, 146, 174, 183, 50, 95, 105, 0, 100, 137, 0, 31},

{57, 93, 11, 47, 24, 186, 131, 59, 40, 22, 21, 2, 8, 84, 192, 75, 4, 122, 0}

};

std::vector<unsigned> expected = {0, 5, 13, 7, 14, 3, 16, 15, 17, 11, 6, 8, 12, 4, 18, 9, 2, 10, 1};

std::vector<unsigned> journey = tsp_dynamic_program(distances, 19);

EXPECT_TRUE( journey == expected || costOfJourney(distances, journey) == 357);

}

TEST(PiazzaTests, Piazza2)

{

std::vector< std::vector< long > > distances = 

{

{0, 13, 0, 37, 6, 35, 132, 103, 29, 79, 154, 23, 18, 199, 145, 39, 119, 180, 177, 143, 89},

{197, 0, 136, 30, 4, 180, 42, 164, 24, 47, 111, 87, 41, 20, 33, 102, 91, 44, 102, 142, 180},

{61, 27, 0, 32, 137, 74, 114, 0, 154, 48, 9, 176, 52, 124, 127, 171, 128, 43, 22, 0, 175},

{161, 2, 111, 0, 180, 77, 47, 0, 127, 5, 22, 151, 113, 187, 130, 174, 0, 128, 182, 199, 111},

{131, 182, 129, 56, 0, 118, 142, 160, 113, 72, 71, 193, 13, 56, 2, 191, 183, 155, 98, 30, 3},

{163, 147, 181, 16, 79, 0, 130, 121, 192, 41, 134, 160, 103, 137, 197, 106, 64, 47, 94, 22, 30},

{147, 171, 6, 147, 10, 28, 0, 101, 84, 82, 2, 0, 17, 134, 52, 200, 142, 11, 174, 0, 88},

{103, 56, 18, 11, 144, 85, 183, 0, 113, 104, 145, 43, 109, 67, 20, 18, 70, 155, 153, 184, 25},

{159, 175, 32, 0, 135, 0, 102, 186, 0, 0, 52, 142, 139, 168, 154, 114, 0, 29, 11, 163, 32},

{176, 81, 195, 183, 96, 184, 198, 108, 2, 0, 102, 0, 180, 115, 43, 0, 180, 142, 54, 0, 200},

{147, 154, 116, 200, 182, 150, 49, 88, 180, 109, 0, 7, 153, 198, 48, 72, 77, 131, 172, 57, 194},

{70, 191, 194, 98, 80, 147, 14, 32, 158, 133, 30, 0, 198, 144, 157, 91, 0, 112, 179, 39, 79},

{89, 61, 154, 110, 69, 0, 50, 10, 32, 16, 152, 90, 0, 170, 70, 76, 181, 167, 51, 73, 105},

{183, 37, 69, 78, 198, 40, 103, 192, 167, 174, 91, 184, 73, 0, 5, 148, 134, 57, 113, 0, 191},

{116, 169, 89, 111, 168, 85, 166, 97, 63, 130, 30, 45, 199, 24, 0, 84, 53, 153, 118, 23, 57},

{150, 102, 83, 41, 80, 56, 112, 21, 169, 138, 162, 2, 116, 58, 98, 0, 79, 159, 66, 178, 89},

{179, 118, 147, 153, 86, 118, 32, 64, 0, 73, 86, 114, 97, 149, 23, 177, 0, 185, 149, 170, 131},

{27, 153, 4, 88, 11, 90, 99, 83, 48, 35, 189, 101, 186, 103, 190, 142, 5, 0, 193, 20, 0},

{30, 150, 43, 111, 152, 175, 35, 74, 74, 166, 167, 73, 2, 128, 89, 174, 104, 98, 0, 179, 86},

{0, 12, 192, 81, 0, 0, 19, 72, 128, 170, 38, 37, 8, 4, 155, 61, 138, 71, 198, 0, 200},

{68, 135, 179, 54, 68, 54, 58, 5, 147, 146, 108, 118, 52, 145, 154, 0, 173, 164, 197, 112, 0}

};

std::vector<unsigned> expected = {0, 15, 3, 1, 4, 20, 7, 2, 10, 11, 6, 17, 16, 14, 13, 5, 19, 12, 9, 8, 18};

std::vector<unsigned> journey = tsp_dynamic_program(distances, 21);

EXPECT_TRUE( journey == expected || costOfJourney(distances, journey) == 334);

}*/

TEST(PiazzaTests, Piazza3)

{

    std::vector< std::vector< long > > distances =

    {

    {0, 165, 184, 193, 17, 122, 64, 51, 100, 133, 0, 174, 194, 0, 23, 63, 133, 15, 169, 126, 11, 115, 197},

    {81, 0, 162, 120, 98, 20, 171, 39, 92, 173, 51, 26, 89, 131, 197, 134, 127, 143, 97, 133, 40, 0, 10},

    {167, 72, 0, 80, 70, 25, 0, 127, 110, 168, 67, 161, 85, 0, 0, 155, 73, 72, 154, 75, 58, 194, 98},

    {86, 157, 99, 0, 190, 121, 127, 158, 125, 0, 197, 35, 52, 75, 22, 121, 198, 87, 15, 121, 22, 10, 164},

    {81, 90, 76, 42, 0, 39, 75, 172, 13, 97, 151, 184, 63, 6, 93, 7, 132, 72, 31, 11, 57, 69, 0},

    {40, 30, 74, 186, 176, 0, 71, 107, 76, 65, 4, 107, 134, 139, 61, 25, 157, 73, 52, 178, 154, 91, 87},

    {34, 0, 98, 26, 55, 134, 0, 92, 72, 67, 139, 38, 39, 6, 41, 118, 196, 1, 0, 50, 18, 16, 136},

    {14, 97, 45, 39, 52, 69, 72, 0, 179, 166, 81, 98, 176, 151, 150, 67, 191, 63, 181, 102, 89, 38, 92},

    {53, 194, 168, 106, 15, 164, 26, 34, 0, 150, 124, 63, 22, 27, 69, 67, 124, 181, 193, 190, 165, 179, 24},

    {145, 47, 81, 9, 26, 11, 139, 67, 190, 0, 181, 59, 118, 0, 82, 1, 0, 156, 36, 102, 76, 163, 91},

    {0, 30, 124, 192, 71, 172, 30, 17, 80, 176, 0, 76, 198, 86, 105, 180, 86, 15, 58, 157, 3, 0, 126},

    {143, 190, 81, 132, 34, 88, 1, 119, 36, 184, 195, 0, 100, 158, 38, 13, 109, 164, 111, 7, 86, 158, 0},

    {158, 125, 18, 88, 99, 160, 199, 171, 71, 146, 49, 88, 0, 154, 130, 87, 151, 36, 51, 83, 0, 181, 176},

    {0, 34, 166, 120, 185, 58, 164, 0, 45, 191, 10, 86, 37, 0, 70, 107, 56, 67, 67, 0, 75, 165, 45},

    {83, 137, 4, 26, 5, 91, 152, 165, 191, 37, 184, 91, 25, 161, 0, 128, 115, 164, 46, 46, 0, 2, 167},

    {137, 109, 42, 2, 9, 107, 102, 5, 151, 156, 0, 158, 196, 181, 4, 0, 189, 55, 8, 33, 0, 97, 97},

    {189, 131, 192, 107, 194, 105, 130, 35, 15, 141, 7, 74, 164, 150, 51, 0, 0, 191, 98, 187, 42, 75, 141},

    {106, 12, 0, 164, 31, 82, 147, 162, 58, 94, 106, 122, 179, 35, 0, 11, 55, 0, 107, 78, 182, 54, 110},

    {98, 71, 164, 38, 91, 109, 8, 167, 188, 130, 197, 60, 11, 54, 191, 21, 21, 185, 0, 28, 123, 156, 154},

    {94, 137, 0, 66, 197, 134, 63, 29, 116, 99, 116, 44, 121, 126, 172, 97, 153, 23, 168, 0, 12, 93, 91},

    {70, 34, 14, 92, 25, 83, 104, 192, 68, 65, 56, 109, 128, 43, 64, 127, 4, 70, 44, 49, 0, 200, 117},

    {43, 33, 148, 34, 185, 130, 62, 35, 105, 162, 121, 29, 47, 184, 113, 100, 160, 17, 182, 62, 143, 0, 181},

    {163, 33, 176, 31, 128, 12, 89, 172, 199, 59, 107, 17, 28, 5, 21, 126, 200, 106, 7, 175, 195, 12, 0}

    };

    std::vector<unsigned> expected = {0, 17, 1, 22, 18, 12, 2, 5, 15, 14, 9, 3, 21, 11, 6, 13, 10, 20, 16, 8, 4, 19, 7};

    std::vector<unsigned> journey = tsp_dynamic_program(distances, 23);

    EXPECT_TRUE( journey == expected || costOfJourney(distances, journey) == 320);

}

TEST(PiazzaTests, Piazza4)

{

    std::vector< std::vector< long > > distances =

    {

    {0, 85, 139, 5, 193, 24, 151, 39, 174, 140, 194, 113, 18, 35, 5, 82, 16, 150, 1, 103, 169, 2, 34, 75},

    {51, 0, 9, 105, 95, 192, 17, 62, 163, 17, 134, 169, 162, 19, 57, 106, 10, 96, 153, 91, 25, 80, 29, 44},

    {121, 6, 0, 180, 194, 63, 7, 63, 1, 21, 42, 200, 0, 25, 2, 145, 13, 14, 196, 155, 13, 184, 54, 39},

    {7, 138, 56, 0, 102, 185, 55, 47, 80, 189, 186, 64, 8, 188, 5, 197, 111, 57, 0, 64, 110, 46, 0, 31},

    {6, 149, 107, 33, 0, 74, 198, 183, 6, 197, 133, 0, 189, 128, 70, 190, 108, 83, 75, 75, 13, 34, 194, 36},

    {0, 166, 23, 148, 39, 0, 169, 86, 30, 152, 197, 31, 147, 94, 177, 89, 133, 130, 179, 149, 192, 94, 180, 157},

    {0, 108, 193, 100, 79, 167, 0, 18, 61, 197, 73, 178, 147, 120, 101, 16, 139, 179, 93, 130, 196, 186, 133, 26},

    {147, 193, 20, 0, 118, 66, 29, 0, 170, 139, 189, 190, 18, 59, 71, 110, 198, 0, 171, 94, 168, 11, 9, 125},

    {181, 146, 28, 68, 52, 149, 0, 121, 0, 47, 191, 40, 15, 156, 143, 14, 127, 39, 167, 145, 184, 51, 135, 158},

    {16, 125, 125, 195, 1, 96, 152, 2, 0, 0, 192, 48, 140, 43, 50, 60, 87, 144, 192, 119, 96, 60, 105, 148},

    {156, 47, 0, 46, 64, 2, 93, 1, 0, 0, 0, 116, 58, 34, 16, 129, 148, 111, 191, 63, 165, 48, 151, 121},

    {132, 168, 188, 168, 3, 66, 196, 133, 76, 159, 35, 0, 107, 80, 132, 155, 177, 173, 42, 130, 156, 114, 5, 166},

    {3, 180, 11, 85, 117, 176, 97, 100, 120, 121, 183, 74, 0, 38, 63, 47, 179, 173, 113, 76, 157, 64, 40, 0},

    {91, 84, 10, 96, 70, 49, 151, 54, 22, 55, 118, 158, 98, 0, 81, 93, 194, 0, 0, 48, 73, 101, 31, 101},

    {144, 64, 159, 199, 60, 45, 162, 138, 21, 188, 111, 190, 81, 29, 0, 142, 44, 187, 153, 177, 125, 12, 144, 150},

    {178, 0, 117, 178, 59, 183, 93, 42, 41, 0, 99, 10, 38, 62, 7, 0, 173, 142, 126, 170, 138, 6, 6, 142},

    {99, 42, 28, 110, 119, 74, 147, 90, 189, 0, 66, 93, 128, 19, 121, 23, 0, 174, 116, 69, 163, 79, 130, 0},

    {162, 182, 82, 168, 198, 104, 150, 0, 25, 108, 48, 0, 68, 165, 13, 5, 0, 0, 119, 118, 156, 91, 172, 35},

    {124, 71, 25, 50, 153, 91, 16, 100, 123, 128, 196, 164, 19, 82, 29, 27, 135, 52, 0, 179, 135, 105, 122, 191},

    {65, 96, 57, 141, 146, 75, 53, 95, 6, 80, 93, 63, 141, 4, 191, 35, 11, 103, 77, 0, 40, 57, 200, 120},

    {93, 28, 86, 182, 50, 67, 135, 104, 168, 0, 70, 31, 124, 72, 4, 60, 25, 77, 22, 178, 0, 149, 188, 137},

    {57, 115, 165, 7, 199, 199, 23, 3, 51, 171, 24, 178, 113, 155, 32, 200, 53, 162, 50, 163, 51, 0, 118, 114},

    {59, 100, 194, 173, 179, 1, 0, 32, 88, 131, 81, 2, 62, 3, 119, 88, 86, 42, 149, 38, 94, 23, 0, 163},

    {57, 125, 154, 86, 109, 157, 72, 89, 170, 66, 192, 0, 181, 124, 11, 121, 110, 140, 28, 85, 156, 43, 7, 0}

    };

    std::vector<unsigned> expected = {0, 3, 14, 21, 10, 5, 8, 17, 15, 11, 4, 20, 18, 6, 23, 22, 19, 16, 13, 2, 1, 9, 7, 12};

    std::vector<unsigned> journey = tsp_dynamic_program(distances, 24);

    EXPECT_TRUE( journey == expected || costOfJourney(distances, journey) == 343);

}


}
